{"ast":null,"code":"var _jsxFileName = \"/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/provider/ProviderRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\"; //importing select\n\nimport Select from '../PostAd/Select'; //constant values for select\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst country = ['United States', 'Canada'];\nconst ethnicity = ['Africian-Americian', 'Asian', 'Hispanic and Latino', 'Native American'];\nconst therapy = [\"Acceptance and Commitment (ACT)\", \"Adlerian\", \"Art Therapy\", \"Attachment-based\", \"Biofeedback\", \"Coaching\"];\nconst age = [\"Adolescents/ Teenagers (14 to 19)\", \"Adults\", \"children (6 to 10)\", \"Elders(65+)\"];\nexport default function Register(props) {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    prefix: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    userName: \"\",\n    password: \"\",\n    degree: \"\",\n    aboutMe: \"\",\n    therapy: \"\",\n    age: \"\",\n    ethnicity: \"\",\n    location: \"\",\n    profile_photo_url: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const createUser = () => {\n    if (formValues.userName === \"\" || formValues.email === \"\" || formValues.password === \"\" || formValues.firstName === \"\" || formValues.lastName === \"\") {\n      setError(\"First name , last name , Username, email and password cannot be blank !\");\n    } else {\n      const user = {\n        prefix: formValues.prefix,\n        firstName: formValues.firstName,\n        lastName: formValues.lastName,\n        userName: formValues.userName,\n        email: formValues.email,\n        password: formValues.password,\n        degree: formValues.degree,\n        aboutMe: formValues.aboutMe,\n        therapy: formValues.therapy,\n        age: formValues.age,\n        ethnicity: formValues.ethnicity,\n        location: formValues.location,\n        profile_photo_url: formValues.profile_photo_url\n      };\n      console.log(user);\n      axios.post(`http://localhost:8010/api/register`, user).then(res => {\n        if (res.data.length <= 0) {\n          setError(\"Could not create user this username already exists!\");\n        } else {\n          console.log(res.data);\n          setError(\"\");\n          props.setUser(res.data);\n          setLoggedIn(true);\n        }\n      });\n    }\n  };\n\n  return !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        onSubmit: event => event.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"CREATE NEW PROVIDER ACCOUNT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prefix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"prefix\",\n          value: formValues.prefix,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \" \",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mr\",\n            children: \"Mr.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mrs\",\n            children: \"Mrs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ms\",\n            children: \"Ms.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: formValues.firstName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: formValues.lastName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formValues.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userName\",\n          value: formValues.userName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formValues.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Degree:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"degree\",\n          value: formValues.degree,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"About Me:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"aboutMe\",\n          value: formValues.aboutMe,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Therapy:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          listArray: therapy,\n          name: \"therapy\",\n          value: formValues.therapy,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          listArray: age,\n          name: \"age\",\n          value: formValues.age,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ethnicity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          listArray: ethnicity,\n          name: \"ethnicity\",\n          value: formValues.ethnicity,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          listArray: country,\n          name: \"location\",\n          value: formValues.location,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"profile_photo_url\",\n          value: formValues.profile_photo_url,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"CREATE NEW ACCOUNT\",\n          onClick: createUser,\n          className: \"register-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"sLdz1J83vsrCPhThcVCgzobC25k=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/provider/ProviderRegister.js"],"names":["React","useState","axios","Redirect","Select","country","ethnicity","therapy","age","Register","props","formValues","setFormValues","prefix","firstName","lastName","email","userName","password","degree","aboutMe","location","profile_photo_url","error","setError","loggedIn","setLoggedIn","handleChange","event","name","value","target","createUser","user","console","log","post","then","res","data","length","setUser","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\n//importing select\nimport Select from '../PostAd/Select';\n\n//constant values for select\nconst country = ['United States', 'Canada'];\nconst ethnicity = ['Africian-Americian','Asian','Hispanic and Latino','Native American'];\nconst therapy=[\"Acceptance and Commitment (ACT)\",\"Adlerian\",\"Art Therapy\", \n\"Attachment-based\", \"Biofeedback\", \"Coaching\"];\nconst age=[\"Adolescents/ Teenagers (14 to 19)\", \"Adults\", \"children (6 to 10)\", \"Elders(65+)\"]\n\n\n\nexport default function Register(props) {\n\n    const [formValues, setFormValues] = useState({\n        prefix:\"\",\n        firstName:\"\",\n        lastName:\"\",\n        email: \"\",\n        userName:\"\",\n        password: \"\",\n        degree:\"\",\n        aboutMe:\"\",\n        therapy:\"\",\n        age:\"\",\n        ethnicity:\"\",\n        location:\"\",\n        profile_photo_url:\"\"\n    });\n    const [error, setError] = useState(\"\");\n\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setFormValues({ ...formValues, [name]: value })\n    }\n\n    const createUser = () => {\n        if(formValues.userName === \"\"||formValues.email === \"\" || formValues.password===\"\" || formValues.firstName===\"\"\n        || formValues.lastName===\"\") {\n            setError(\"First name , last name , Username, email and password cannot be blank !\")\n        } else {\n            const user = {\n                prefix:formValues.prefix,\n                firstName:formValues.firstName,\n                lastName:formValues.lastName,\n                userName:formValues.userName,\n                email: formValues.email,\n                password: formValues.password,\n                degree:formValues.degree,\n                aboutMe:formValues.aboutMe,\n                therapy:formValues.therapy,\n                age:formValues.age,\n                ethnicity:formValues.ethnicity,\n                location:formValues.location,\n                profile_photo_url:formValues.profile_photo_url\n            }\n            console.log(user);\n            axios.post(`http://localhost:8010/api/register`,user).then(res =>{\n                if(res.data.length <= 0){\n                    setError(\"Could not create user this username already exists!\")\n                    } else {\n                        console.log(res.data);\n                        setError(\"\");\n                        props.setUser(res.data)\n                        setLoggedIn(true);\n                    } \n             });\n\n        } \n    }\n\n    return !loggedIn ? (\n        <div className=\"register-container\">\n            <div className=\"register\">\n                <form className=\"register-form\" onSubmit={event => event.preventDefault()} >\n                    <h2>CREATE NEW PROVIDER ACCOUNT</h2>\n                    {error && <div className=\"alert-error\">\n                    {error}\n                    </div>}\n                    <h3>Prefix:</h3>\n                    <select name=\"prefix\" value={formValues.prefix} onChange = {handleChange} >\n                        <option value=\" \"> </option>\n                        <option value= \"Mr\">Mr.</option>\n                        <option value= \"Mrs\">Mrs.</option>\n                        <option value= \"Ms\">Ms.</option>\n                    </select>\n                    <h3>First Name:</h3>\n                    <input type=\"text\" name=\"firstName\" value={formValues.firstName} onChange = {handleChange}/>\n                    <h3>Last Name:</h3>\n                    <input type=\"text\" name=\"lastName\" value={formValues.lastName} onChange = {handleChange}/>\n                    <h3>Email:</h3>\n                    <input type=\"email\" name=\"email\" value={formValues.email} onChange = {handleChange}/>\n                    <h3>Username:</h3>\n                    <input type=\"text\" name=\"userName\" value={formValues.userName} onChange = {handleChange}/>\n                    <h3>Password:</h3>\n                    <input type=\"password\" name=\"password\" value={formValues.password} onChange = {handleChange}/>\n                    <h3>Degree:</h3>\n                    <input type=\"text\" name=\"degree\" value={formValues.degree} onChange = {handleChange}/>\n                    <h3>About Me:</h3>\n                    <textarea name=\"aboutMe\" value={formValues.aboutMe} onChange = {handleChange}/>\n                    <h3>Therapy:</h3>\n                    <Select listArray={therapy} name='therapy' value={formValues.therapy} handleChange={handleChange}/>\n                    <h3>Age:</h3>\n                    <Select listArray={age} name='age' value={formValues.age} handleChange={handleChange}/>\n                    <h3>Ethnicity:</h3>\n                    <Select listArray={ethnicity} name='ethnicity' value={formValues.ethnicity} handleChange={handleChange}/>\n                    <h3>Location:</h3>\n                    <Select listArray={country} name='location' value={formValues.location} handleChange={handleChange}/>\n                    <h3>Profile Photo</h3>\n                    <input type=\"file\" name=\"profile_photo_url\" value={formValues.profile_photo_url} onChange = {handleChange}/>\n                    <br/>\n                    <input type=\"submit\" value=\"CREATE NEW ACCOUNT\" onClick={createUser} className=\"register-button\"/>\n                </form>\n            </div>       \n        </div>\n    ):<Redirect to='/'></Redirect>;\n    \n}"]},"metadata":{},"sourceType":"module"}
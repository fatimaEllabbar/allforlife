{"ast":null,"code":"var _jsxFileName = \"/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/PostAd/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport Details from \"./Details\";\nimport ProblemDescription from \"./ProblemDescription\";\nimport Preferences from \"./Preferences\";\nimport Budget from \"./Budget\";\nimport Availability from \"./Availability\";\nimport Review from \"./Review\";\nimport Landing from \"./Landing\"; //helper filer\n\nimport useVisualMode from '../../hooks/useVisualMode'; //DECLEARING CONSTANTS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANDING = \"LANDING\";\nconst DESCRIPTION = \"DESCRIPTION\";\nconst DETAILS = \"DETAILS\";\nconst PREFERENCES = \"PREFERENCES\";\nconst BUDGET = \"BUDGET\";\nconst AVAILABILITY = \"AVAILABILITY\";\nconst REVIEW = \"REVIEW\"; //PostAd component\n\nexport default function PostAd(props) {\n  _s();\n\n  console.log(props);\n  /*  hooks  */\n\n  const {\n    mode,\n    transition,\n    back\n  } = useVisualMode(LANDING);\n  const [timeline, setTimeline] = useState(0);\n  const [state, setState] = useState({\n    appointmentFor: '',\n    description: '',\n    symptomesId: [],\n    symptomes: [],\n    therapy: '',\n    insurance: '',\n    age: '',\n    timeZones: '',\n    sexuality: '',\n    language: '',\n    ethnicity: '',\n    faith: '',\n    country: '',\n    typeOfPayment: '',\n    minPrice: '',\n    maxPrice: '',\n    appointmentFrequency: '',\n    timeRequirement: '',\n    availabilityTo: '',\n    availabilityFrom: ''\n  });\n  /*  hooks end  */\n\n  /* local functions start*/\n\n  function handleNextClick(mode) {\n    transition(mode);\n    setTimeline(prev => prev + 140);\n  }\n\n  function handleBackClick(mode) {\n    console.log(state);\n    back(mode);\n    setTimeline(prev => {\n      if (prev > 0) {\n        return prev - 140;\n      }\n\n      return 0;\n    });\n  }\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setState({ ...state,\n      [name]: value\n    });\n  };\n\n  function addSymptomes(newSymptomes, id) {\n    setState({ ...state,\n      symptomes: newSymptomes,\n      symptomesId: id\n    });\n  } //function submit jobpost\n\n\n  function post() {\n    console.log(state);\n    const jobPostObj = { ...state,\n      customerId: props.user.id\n    };\n    console.log(jobPostObj, \"jobpost\");\n    const response = axios.post('http://localhost:8010/api/jobpost', {\n      jobPostData: jobPostObj\n    }).then(res => {\n      console.log(res, \"response\");\n    }).catch(e => console.log(e, \"error\"));\n    return response;\n  }\n  /* local functions end */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [mode === \"LANDING\" && /*#__PURE__*/_jsxDEV(Landing, { ...state,\n      handleChange: handleChange,\n      onNext: () => transition(DESCRIPTION)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }, this), mode === \"DESCRIPTION\" && /*#__PURE__*/_jsxDEV(ProblemDescription, { ...state,\n      handleChange: handleChange,\n      timeline: timeline,\n      onBack: () => handleBackClick(LANDING),\n      onNext: () => handleNextClick(DETAILS)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }, this), mode === \"DETAILS\" && /*#__PURE__*/_jsxDEV(Details, { ...state,\n      handleChange: handleChange,\n      addSymptomes: addSymptomes,\n      timeline: timeline,\n      onBack: () => handleBackClick(DESCRIPTION),\n      onNext: () => handleNextClick(PREFERENCES)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }, this), mode === \"PREFERENCES\" && /*#__PURE__*/_jsxDEV(Preferences, { ...state,\n      handleChange: handleChange,\n      timeline: timeline,\n      onBack: () => handleBackClick(DETAILS),\n      onNext: () => handleNextClick(BUDGET)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }, this), mode === \"BUDGET\" && /*#__PURE__*/_jsxDEV(Budget, { ...state,\n      handleChange: handleChange,\n      timeline: timeline,\n      onBack: () => handleBackClick(PREFERENCES),\n      onNext: () => handleNextClick(AVAILABILITY)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 28\n    }, this), mode === \"AVAILABILITY\" && /*#__PURE__*/_jsxDEV(Availability, { ...state,\n      handleChange: handleChange,\n      timeline: timeline,\n      onBack: () => handleBackClick(BUDGET),\n      onNext: () => handleNextClick(REVIEW)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 34\n    }, this), mode === \"REVIEW\" && /*#__PURE__*/_jsxDEV(Review, { ...state,\n      handleChange: handleChange,\n      timeline: timeline,\n      onBack: () => handleBackClick(AVAILABILITY),\n      onPost: () => post()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostAd, \"oo1lqSPfRI6np5UswUdSbzrAsyU=\", false, function () {\n  return [useVisualMode];\n});\n\n_c = PostAd;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostAd\");","map":{"version":3,"sources":["/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/PostAd/index.js"],"names":["React","useState","axios","Details","ProblemDescription","Preferences","Budget","Availability","Review","Landing","useVisualMode","LANDING","DESCRIPTION","DETAILS","PREFERENCES","BUDGET","AVAILABILITY","REVIEW","PostAd","props","console","log","mode","transition","back","timeline","setTimeline","state","setState","appointmentFor","description","symptomesId","symptomes","therapy","insurance","age","timeZones","sexuality","language","ethnicity","faith","country","typeOfPayment","minPrice","maxPrice","appointmentFrequency","timeRequirement","availabilityTo","availabilityFrom","handleNextClick","prev","handleBackClick","handleChange","event","name","value","target","addSymptomes","newSymptomes","id","post","jobPostObj","customerId","user","response","jobPostData","then","res","catch","e"],"mappings":"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","sourcesContent":["import  React, { useState, } from \"react\";\nimport axios from 'axios'\nimport Details from \"./Details\";\nimport ProblemDescription from \"./ProblemDescription\";\nimport Preferences from \"./Preferences\";\nimport Budget from \"./Budget\";\nimport Availability from \"./Availability\";\nimport Review from \"./Review\";\nimport Landing from \"./Landing\"\n\n//helper filer\nimport useVisualMode from '../../hooks/useVisualMode'\n\n//DECLEARING CONSTANTS\nconst LANDING = \"LANDING\";\nconst DESCRIPTION =\"DESCRIPTION\";\nconst DETAILS= \"DETAILS\";\nconst PREFERENCES = \"PREFERENCES\";\nconst BUDGET = \"BUDGET\";\nconst AVAILABILITY = \"AVAILABILITY\";\nconst REVIEW = \"REVIEW\";\n\n\n//PostAd component\nexport default function PostAd(props){\n\n  console.log(props)\n  /*  hooks  */\n  const {mode, transition, back} = useVisualMode(LANDING)\n  const [timeline, setTimeline] = useState(0)\n\n  const [state, setState]=useState({\n    appointmentFor:'',\n    description:'',\n    symptomesId: [],\n    symptomes:[],\n    therapy:'',\n    insurance:'', \n    age:'' ,\n    timeZones: '',\n    sexuality:'',\n    language:'',\n    ethnicity:'',\n    faith:'',\n    country:'',\n    typeOfPayment:'',\n    minPrice:'',\n    maxPrice:'',\n    appointmentFrequency:'',\n    timeRequirement:'',\n    availabilityTo:'',\n    availabilityFrom:''\n });\n /*  hooks end  */\n\n\n /* local functions start*/\n\nfunction handleNextClick(mode) {\n  transition(mode)\n  setTimeline(prev => prev + 140)\n}\n\nfunction handleBackClick(mode) {\n  console.log(state)\n  back(mode)\n  setTimeline(prev => {\n    if(prev > 0){\n      return prev - 140\n    }\n    return 0\n  })\n\n}\n\nconst handleChange = (event) => {\n  const { name, value } = event.target\n  setState({ ...state, [name]: value })\n} \nfunction addSymptomes(newSymptomes, id) {\n  setState({...state, symptomes :newSymptomes, symptomesId: id})\n\n}\n\n//function submit jobpost\n\nfunction post() {\n  console.log(state)\n  const jobPostObj = {\n    ...state,\n    customerId: props.user.id\n  }\n  console.log(jobPostObj, \"jobpost\")\n\n  const response = axios.post('http://localhost:8010/api/jobpost', {jobPostData: jobPostObj}).then(res => {console.log(res,\"response\")}).catch(e=>console.log(e,\"error\"))\n\n  return response;\n}\n/* local functions end */\n\n  return(\n    <>\n    { mode === \"LANDING\" && <Landing {...state} handleChange={handleChange} onNext={() =>transition(DESCRIPTION)}/>}\n    { mode === \"DESCRIPTION\" && <ProblemDescription {...state} handleChange={handleChange} timeline={timeline} onBack={() =>handleBackClick(LANDING)} onNext={() =>handleNextClick(DETAILS)}/>}\n    { mode === \"DETAILS\" && <Details {...state} handleChange={handleChange} addSymptomes={addSymptomes} timeline={timeline} onBack={() =>handleBackClick(DESCRIPTION)} onNext={() =>handleNextClick(PREFERENCES)}/> } \n    { mode === \"PREFERENCES\" && <Preferences {...state} handleChange={handleChange} timeline={timeline} onBack={() =>handleBackClick(DETAILS)} onNext={() =>handleNextClick(BUDGET)}/> } \n    { mode === \"BUDGET\" && <Budget {...state} handleChange={handleChange} timeline={timeline} onBack={() =>handleBackClick(PREFERENCES)} onNext={() =>handleNextClick(AVAILABILITY)}/> } \n    { mode === \"AVAILABILITY\" && <Availability {...state} handleChange={handleChange} timeline={timeline} onBack={() =>handleBackClick(BUDGET)} onNext={() =>handleNextClick(REVIEW)}/> } \n    { mode === \"REVIEW\" && <Review {...state} handleChange={handleChange} timeline={timeline} onBack={() =>handleBackClick(AVAILABILITY)} onPost={() => post()}/> } \n    \n    </>  )\n}"]},"metadata":{},"sourceType":"module"}
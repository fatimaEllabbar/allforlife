{"ast":null,"code":"var _jsxFileName = \"/home/megamind/Downloads/FatimaAllforLifelatest/FatimaAllforLife/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport queryString from 'query-string';\nimport validate from 'uuid-validate';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './index.css';\nimport axios from \"axios\";\nimport ProviderChat from './ProviderChat';\nimport CustomerChat from './CustomerChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  location\n}) {\n  _s();\n\n  const {\n    ID1,\n    ID2,\n    name\n  } = queryString.parse(location.search);\n  const job_proposal_id = 15;\n  const [yourID, setYourID] = useState();\n  const [receiverName, setReceiverName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [textArea, setTextArea] = useState(\"\");\n  const socketRef = useRef();\n  const ENDPOINT = 'http://localhost:8010'; //function handlers...... start\n\n  const receiveMessage = message => {\n    setMessages(oldMessages => [...oldMessages, message]);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const messageData = {\n      jobProposalID: job_proposal_id,\n      customerID: !validate(ID1) ? ID1 : ID2,\n      providerID: validate(ID1) ? ID1 : ID2,\n      type: validate(ID1) ? \"provider\" : \"customer\",\n      message: textArea\n    };\n    axios.post('http://localhost:8010/api/messages/', messageData).then(res => {\n      if (res.status === 200) {\n        const messageObj = {\n          body: textArea,\n          id: yourID,\n          receiverID: ID2,\n          sendername: name,\n          senderID: ID1\n        };\n        setTextArea(\"\");\n        socketRef.current.emit(\"send message\", messageObj);\n      }\n    }).catch(err => console.log(\"error saving message\"));\n  };\n\n  const handleChange = e => {\n    setTextArea(e.target.value);\n  }; //function handlers...... end\n\n\n  useEffect(() => {\n    socketRef.current = io.connect(ENDPOINT);\n    socketRef.current.on('getID', socketID => {\n      setYourID(socketID);\n    });\n    socketRef.current.emit('join', ID1);\n    socketRef.current.on('message', message => {\n      console.log(message, \"her her\");\n      receiveMessage(message);\n      setReceiverName(message.sendername !== name ? message.sendername : null);\n    }); //retrieve messages from database\n\n    axios.get(`http://localhost:8010/api/messages/${job_proposal_id}`).then(res => {\n      const msgArr = [];\n      res.data.forEach(messageObj => {\n        const msgObj = {\n          body: messageObj.message,\n          id: '',\n          type: messageObj.type,\n          receiverID: messageObj.type === 'customer' ? ID2 : ID1\n        };\n        msgArr.push(msgObj);\n      });\n      setMessages(msgArr);\n      console.log(res.data, \"messages for database\");\n    });\n  }, []); //JSX\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-card01\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"Chat room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: messages.map((message, index) => {\n          if (message.id === yourID || message.type === \"customer\") {\n            return /*#__PURE__*/_jsxDEV(CustomerChat, {\n              name: name,\n              message: message.body\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 20\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(ProviderChat, {\n            name: receiverName,\n            message: message.body\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"message\",\n            onChange: handleChange,\n            value: textArea,\n            id: \"outlined-multiline-static\",\n            placeholder: \"Say something\",\n            className: \"textfield\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"V1JH7HOJ0yqbeM+hOn9WPuUHBWE=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/megamind/Downloads/FatimaAllforLifelatest/FatimaAllforLife/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","useRef","queryString","validate","io","TextField","axios","ProviderChat","CustomerChat","Chat","location","ID1","ID2","name","parse","search","job_proposal_id","yourID","setYourID","receiverName","setReceiverName","messages","setMessages","textArea","setTextArea","socketRef","ENDPOINT","receiveMessage","message","oldMessages","sendMessage","e","preventDefault","messageData","jobProposalID","customerID","providerID","type","post","then","res","status","messageObj","body","id","receiverID","sendername","senderID","current","emit","catch","err","console","log","handleChange","target","value","connect","on","socketID","get","msgArr","data","forEach","msgObj","push","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport queryString from 'query-string';\nimport validate from 'uuid-validate';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './index.css'\nimport axios from \"axios\";\nimport ProviderChat from './ProviderChat'\nimport CustomerChat from './CustomerChat'\nexport default function Chat({ location }){\n  const {ID1, ID2, name} = queryString.parse(location.search);\n  const job_proposal_id = 15;\n \n  const [yourID, setYourID] = useState();\n  const [receiverName, setReceiverName] = useState(\"\")\n  const [messages, setMessages] = useState([]);\n  const [textArea, setTextArea] = useState(\"\");\n  const socketRef = useRef();\n  const ENDPOINT = 'http://localhost:8010'\n  \n  //function handlers...... start\n  const receiveMessage = (message) => {\n    setMessages(oldMessages => [...oldMessages, message])\n  }\n  const sendMessage = (e) => {\n      e.preventDefault();\n      const messageData = {\n        jobProposalID: job_proposal_id ,\n        customerID: !validate(ID1)? ID1 : ID2,\n        providerID: validate(ID1)? ID1 : ID2,\n        type:  validate(ID1)? \"provider\" : \"customer\",\n        message: textArea\n      }\n      axios.post('http://localhost:8010/api/messages/', messageData)\n        .then(res => {\n          if (res.status === 200) {\n            const messageObj = {\n              body: textArea,\n              id: yourID,\n              receiverID: ID2,\n              sendername: name,\n              senderID: ID1,\n            };\n            setTextArea(\"\");\n            socketRef.current.emit(\"send message\", messageObj);\n          }\n        })\n        .catch(err => console.log(\"error saving message\"))\n  }\n  const handleChange = (e) => {\n    setTextArea(e.target.value);\n  }\n   //function handlers...... end\n  useEffect(() => {\n    socketRef.current = io.connect(ENDPOINT);\n    socketRef.current.on('getID', (socketID) => {\n      setYourID(socketID);\n    })\n    socketRef.current.emit('join', ID1)\n    socketRef.current.on('message', (message) => {\n      console.log(message, \"her her\")\n      receiveMessage(message)\n      setReceiverName(message.sendername !== name? message.sendername : null)\n    })\n    //retrieve messages from database\n    axios.get(`http://localhost:8010/api/messages/${job_proposal_id}`).then(res =>{\n      const msgArr = []\n      res.data.forEach(messageObj => {\n        const msgObj = {\n          body:messageObj.message,\n          id: '',\n          type:messageObj.type,\n          receiverID: messageObj.type === 'customer'? ID2: ID1,\n        }\n        msgArr.push(msgObj)\n      });\n      setMessages(msgArr)\n      console.log(res.data, \"messages for database\");\n  });\n  }, []);\n  //JSX\n  return(\n    <div className=\"chat-card01\">\n    <div className=\"chat-card\">\n      <div className=\"chat-header\">\n        Chat room \n      </div>\n      <div className=\"chat-container\">\n        {messages.map((message, index) => {\n          if (message.id === yourID || message.type === \"customer\"  ) {\n            return <CustomerChat key={index} name ={name} message={message.body} />\n          }\n          return <ProviderChat key={index}  name ={receiverName} message={message.body} />\n        })}\n      </div>\n      <form onSubmit={sendMessage} className=\"chat-form\">\n        <div >\n          <TextField\n            name=\"message\"\n            onChange={handleChange}\n            value={textArea}\n            id=\"outlined-multiline-static\"\n            placeholder = \"Say something\"\n            className=\"textfield\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n    </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}
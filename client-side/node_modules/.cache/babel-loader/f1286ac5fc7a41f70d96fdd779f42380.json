{"ast":null,"code":"var _jsxFileName = \"/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/provider/ProviderLogin.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { decodeUser } from \"../../util/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProviderLogin(props) {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const fetchUser = () => {\n    if (formValues.name === \"\" || formValues.password === \"\") {\n      setError(\"userName or password cannot be blank !\");\n    } else {\n      axios.post(`http://localhost:8010/api/providers/login`, {\n        userName: formValues.userName,\n        password: formValues.password\n      }).then(res => {\n        console.log(`i am response ${res.data}`);\n\n        if (res.status === 200) {\n          localStorage.setItem(\"token\", res.data.token);\n          const providerData = decodeUser();\n          setError(\"\");\n          props.setUser(providerData.user);\n          console.log(`i am provider ${props}`);\n          setLoggedIn(true);\n        }\n      });\n    }\n  };\n\n  return !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: event => event.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"PROVIDER LOGIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userName\",\n          value: formValues.userName,\n          onChange: handleChange,\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formValues.password,\n          onChange: handleChange,\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"LOGIN\",\n          onClick: fetchUser,\n          className: \"login-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 8\n  }, this);\n}\n\n_s(ProviderLogin, \"JbN6Wg7jIs6M/ct3XqdhGmpGhC0=\");\n\n_c = ProviderLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderLogin\");","map":{"version":3,"sources":["/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/provider/ProviderLogin.js"],"names":["React","useState","axios","Redirect","decodeUser","ProviderLogin","props","formValues","setFormValues","userName","password","error","setError","loggedIn","setLoggedIn","handleChange","event","name","value","target","fetchUser","post","then","res","console","log","data","status","localStorage","setItem","token","providerData","setUser","user","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { decodeUser } from \"../../util/index\";\n\nexport default function ProviderLogin(props) {\n\n    const [formValues, setFormValues] = useState({\n        userName: \"\",\n        password: \"\"\n    });\n    const [error, setError] = useState(\"\");\n\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setFormValues({ ...formValues, [name]: value })\n    }\n\n    const fetchUser = () => {\n        if(formValues.name === \"\" || formValues.password === \"\") {\n            setError(\"userName or password cannot be blank !\")\n        } else {\n            axios.post(`http://localhost:8010/api/providers/login`,\n             { userName : formValues.userName, password :formValues.password}).then(res =>{\n                console.log(`i am response ${res.data}`);\n                if(res.status === 200) {\n                    localStorage.setItem(\"token\",res.data.token);\n                    const providerData = decodeUser();\n                    setError(\"\");\n                    props.setUser(providerData.user);\n                    console.log(`i am provider ${props}`)\n                    setLoggedIn(true);\n                }\n            });      \n        }\n    }\n\n    return !loggedIn ?(\n        <div className=\"login-container\">\n            <div className=\"login\">  \n                <form className=\"login-form\" onSubmit={event => event.preventDefault()} >\n                    <h2>PROVIDER LOGIN</h2>\n                    {error && <div className=\"alert-error\">\n                    {error}\n                    </div>}\n                    <h3>Username:</h3>\n                    <input type=\"text\" name=\"userName\" value ={formValues.userName} onChange = {handleChange}  placeholder=\"Username\"/>\n                    <h3>Password:</h3>\n                    <input type=\"password\" name=\"password\" value= {formValues.password} onChange = {handleChange}  placeholder=\"Password\"/>\n                    <br/>\n                    <input type=\"submit\" value=\"LOGIN\" onClick={fetchUser} className=\"login-button\"/>\n                </form>\n            </div>\n        </div>\n    ): <Redirect to='/'></Redirect>;\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/megamind/Downloads/FatimaAllforLifelatest/FatimaAllforLife/client/src/components/Chat/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport ProviderChat from './ProviderChat';\nimport CustomerChat from './CustomerChat';\nimport './index.css';\nimport ProposalAd from '../ProposalAd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nconst ENDPOINT = 'http://localhost:8010';\nexport default function Chat(props) {\n  _s();\n\n  const [state, setState] = useState({\n    message: '',\n    name: props.username\n  });\n  const [chat, setChat] = useState([]);\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.on('message', ({\n      name,\n      message\n    }) => {\n      setChat([...chat, {\n        name,\n        message\n      }]);\n    });\n  }, [state]);\n\n  const onTextChange = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onMessageSubmit = e => {\n    e.preventDefault();\n    const {\n      name,\n      message\n    } = state;\n    socket.emit('message', {\n      name,\n      message\n    });\n    setState({\n      message: '',\n      name\n    });\n  };\n\n  const renderChat = () => {\n    console.log(chat, \"chat\");\n    return chat.map(({\n      name,\n      message\n    }, index) => props.type === 'customer' ? /*#__PURE__*/_jsxDEV(CustomerChat, {\n      name: name,\n      message: message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(ProviderChat, {\n      name: name,\n      message: message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 97\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chat Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), renderChat()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          onChange: e => onTextChange(e),\n          value: state.message,\n          id: \"outlined-multiline-static\",\n          variant: \"outlined\",\n          label: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"MkyStCboc3YzroRWiO7JA6cBci8=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/megamind/Downloads/FatimaAllforLifelatest/FatimaAllforLife/client/src/components/Chat/index.js"],"names":["React","useState","useEffect","io","TextField","ProviderChat","CustomerChat","ProposalAd","socket","ENDPOINT","Chat","props","state","setState","message","name","username","chat","setChat","on","onTextChange","e","target","value","onMessageSubmit","preventDefault","emit","renderChat","console","log","map","index","type"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport io from 'socket.io-client'\nimport TextField from '@material-ui/core/TextField'\nimport ProviderChat from './ProviderChat'\nimport CustomerChat from './CustomerChat'\nimport './index.css'\nimport ProposalAd from '../ProposalAd';\n\nlet socket;\nconst ENDPOINT = 'http://localhost:8010'\n\nexport default function Chat(props) {\n\n  const [state, setState] = useState({message:'', name: props.username})\n  const [chat, setChat] = useState([]);\n\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.on('message', ({name, message}) => {\n      setChat([...chat, {name, message}])\n    })\n  }, [state])\n\n  const onTextChange = (e) => {\n    setState({...state, [e.target.name]: e.target.value})\n  }\n\n  const onMessageSubmit = (e) => {\n    e.preventDefault();\n    const {name, message} = state;\n    socket.emit('message', {name, message})\n    setState({message:'', name})\n  }\n\n  const renderChat = () => {\n    console.log(chat, \"chat\")\n    return chat.map(({name, message}, index) => (\n\n      props.type === 'customer' ? <CustomerChat key= {index} name={name} message={message} /> : <ProviderChat key= {index} name={name} message={message} />\n      \n\n    ))\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"chat-container\">\n        <h1>Chat Log</h1>\n        {renderChat()}\n      </div>\n      <form onSubmit={onMessageSubmit}>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={e => onTextChange(e)}\n            value={state.message}\n            id=\"outlined-multiline-static\"\n            variant=\"outlined\"\n            label=\"Message\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n      \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/megamind/Downloads/FatimaAllforLifelatest/FatimaAllforLife/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './index.css';\nimport ProviderChat from './ProviderChat';\nimport CustomerChat from './CustomerChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat({\n  location\n}) {\n  _s();\n\n  const {\n    ID1,\n    ID2,\n    name\n  } = queryString.parse(location.search); // const usersObj = {\n  //   customerID,\n  //   customerName\n  // }\n  // console.log(usersObj)\n\n  const messagesFromStorage = localStorage.getItem(\"chat\");\n  const [yourID, setYourID] = useState();\n  const [receiverName, setReceiverName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [textArea, setTextArea] = useState(\"\");\n  const socketRef = useRef();\n  const ENDPOINT = 'http://localhost:8010'; //const username = \"kelz\"\n  //function handlers...... start\n\n  const receiveMessage = message => {\n    setMessages(oldMessages => [...oldMessages, message]);\n    localStorage.setItem(\"chat\", messages);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const messageObj = {\n      body: textArea,\n      id: yourID,\n      receiverID: ID2,\n      sendername: name\n    };\n    setTextArea(\"\");\n    socketRef.current.emit(\"send message\", messageObj);\n  };\n\n  const handleChange = e => {\n    setTextArea(e.target.value);\n  }; //function handlers...... end\n\n\n  useEffect(() => {\n    socketRef.current = io.connect(ENDPOINT);\n    socketRef.current.on('getID', socketID => {\n      setYourID(socketID);\n    });\n    socketRef.current.emit('join', ID1);\n    socketRef.current.on('message', message => {\n      receiveMessage(message);\n      setReceiverName(message.sendername !== name ? message.sendername : null);\n    });\n  }, []); //JSX\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map((message, index) => {\n        if (message.id === yourID) {\n          return /*#__PURE__*/_jsxDEV(CustomerChat, {\n            name: name,\n            message: message.body\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 20\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(ProviderChat, {\n          name: receiverName,\n          message: message.body\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"message\",\n          onChange: handleChange,\n          value: textArea,\n          id: \"outlined-multiline-static\",\n          placeholder: \"Say something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"V1JH7HOJ0yqbeM+hOn9WPuUHBWE=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/megamind/Downloads/FatimaAllforLifelatest/FatimaAllforLife/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","useRef","queryString","io","TextField","ProviderChat","CustomerChat","Chat","location","ID1","ID2","name","parse","search","messagesFromStorage","localStorage","getItem","yourID","setYourID","receiverName","setReceiverName","messages","setMessages","textArea","setTextArea","socketRef","ENDPOINT","receiveMessage","message","oldMessages","setItem","sendMessage","e","preventDefault","messageObj","body","id","receiverID","sendername","current","emit","handleChange","target","value","connect","on","socketID","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport TextField from '@material-ui/core/TextField';\nimport './index.css'\nimport ProviderChat from './ProviderChat'\nimport CustomerChat from './CustomerChat'\n\n\nexport default function Chat({ location }){\n  const {ID1, ID2, name} = queryString.parse(location.search)\n  // const usersObj = {\n  //   customerID,\n  //   customerName\n  // }\n  // console.log(usersObj)\n  const messagesFromStorage = localStorage.getItem(\"chat\")\n  const [yourID, setYourID] = useState();\n  const [receiverName, setReceiverName] = useState(\"\")\n  const [messages, setMessages] = useState([]);\n  const [textArea, setTextArea] = useState(\"\");\n  const socketRef = useRef();\n  const ENDPOINT = 'http://localhost:8010'\n \n  //const username = \"kelz\"\n  \n\n  //function handlers...... start\n\n  const receiveMessage = (message) => {\n    setMessages(oldMessages => [...oldMessages, message])\n    localStorage.setItem(\"chat\", messages)\n  }\n\n  const sendMessage = (e) => {\n    e.preventDefault(); \n    const messageObj = {\n      body: textArea,\n      id: yourID,\n      receiverID: ID2,\n      sendername: name\n    };\n    setTextArea(\"\");\n    socketRef.current.emit(\"send message\", messageObj);\n  }\n  \n  const handleChange = (e) => {\n    setTextArea(e.target.value);\n  }\n   //function handlers...... end\n  \n  useEffect(() => {\n    socketRef.current = io.connect(ENDPOINT);\n    socketRef.current.on('getID', (socketID) => {\n      setYourID(socketID);\n    })\n    socketRef.current.emit('join', ID1)\n    socketRef.current.on('message', (message) => {\n      receiveMessage(message)\n      setReceiverName(message.sendername !== name? message.sendername : null)\n    })\n  }, []);\n\n\n  //JSX\n  return(\n    <div className=\"card\">\n      <div className=\"chat-container\">\n        {messages.map((message, index) => {\n          if (message.id === yourID) {\n            return <CustomerChat key={index} name ={name} message={message.body} />\n          }\n          return <ProviderChat key={index}  name ={receiverName} message={message.body} />\n     \n        })}\n      </div>\n      <form onSubmit={sendMessage}>\n        <div>\n          <TextField\n            name=\"message\"\n            onChange={handleChange}\n            value={textArea}\n            id=\"outlined-multiline-static\"\n            placeholder = \"Say something\"\n          />\n        </div>\n        <button>Send Message</button>\n      </form>\n    </div>\n  )\n\n  \n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
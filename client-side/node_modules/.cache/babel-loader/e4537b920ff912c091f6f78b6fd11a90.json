{"ast":null,"code":"var _jsxFileName = \"/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/customer/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Register.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { decodeUser } from \"../../util/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register(props) {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    prefix: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    userName: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const createUser = () => {\n    if (formValues.userName === \"\" || formValues.email === \"\" || formValues.password === \"\" || formValues.firstName === \"\" || formValues.lastName === \"\") {\n      setError(\"First name , last name , Username, email and password cannot be blank !\");\n    } else {\n      const user = {\n        prefix: formValues.prefix,\n        firstName: formValues.firstName,\n        lastName: formValues.lastName,\n        userName: formValues.userName,\n        email: formValues.email,\n        password: formValues.password\n      };\n      axios.post(`http://localhost:8010/api/register`, user).then(res => {\n        if (res.status === 200) {\n          localStorage.setItem(\"token\", res.data.token);\n          const providerData = decodeUser();\n          setError(\"\");\n          props.setUser(providerData.user);\n          setLoggedIn(true);\n        }\n      }).catch(err => {\n        setError(\"User exists!\");\n      });\n    }\n  };\n\n  return !props.loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        onSubmit: event => event.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"CREATE NEW CUSTOMER ACCOUNT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prefix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"prefix\",\n          value: formValues.prefix,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \" \",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mr\",\n            children: \"Mr.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mrs\",\n            children: \"Mrs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ms\",\n            children: \"Ms.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: formValues.firstName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: formValues.lastName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formValues.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"userName\",\n          value: formValues.userName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formValues.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"CREATE NEW ACCOUNT\",\n          onClick: createUser,\n          className: \"register-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"4w+IgQ41JbwIUwceKqd9nbNUaHk=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/customer/Register.js"],"names":["React","useState","axios","Redirect","decodeUser","Register","props","formValues","setFormValues","prefix","firstName","lastName","email","userName","password","error","setError","handleChange","event","name","value","target","createUser","user","post","then","res","status","localStorage","setItem","data","token","providerData","setUser","setLoggedIn","catch","err","loggedIn","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Register.css\"\nimport { Redirect } from \"react-router-dom\";\nimport { decodeUser } from \"../../util/index\";\n\nexport default function Register(props) {\n\n    const [formValues, setFormValues] = useState({\n        prefix:\"\",\n        firstName:\"\",\n        lastName:\"\",\n        email: \"\",\n        userName:\"\",\n        password: \"\"\n    });\n    const [error, setError] = useState(\"\");\n\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setFormValues({ ...formValues, [name]: value })\n    }\n\n    const createUser = () => {\n        if(formValues.userName === \"\"||formValues.email === \"\" || formValues.password===\"\" || formValues.firstName===\"\"\n        || formValues.lastName===\"\") {\n            setError(\"First name , last name , Username, email and password cannot be blank !\")\n        } else {\n            const user = {\n                prefix:formValues.prefix,\n                firstName:formValues.firstName,\n                lastName:formValues.lastName,\n                userName:formValues.userName,\n                email: formValues.email,\n                password: formValues.password\n            }\n            axios.post(`http://localhost:8010/api/register`,user).then(res =>{\n                    if(res.status === 200){\n                      localStorage.setItem(\"token\",res.data.token);\n                      const providerData = decodeUser();\n                      setError(\"\");\n                      props.setUser(providerData.user);\n                      setLoggedIn(true);\n                   }\n            })\n            .catch(err => {\n                setError(\"User exists!\");\n            })\n            \n        }\n\n    } \n\n    return !props.loggedIn ? (\n        <div className=\"register-container\">\n            <div className=\"register\">\n                <form className=\"register-form\" onSubmit={event => event.preventDefault()} >\n                    <h2>CREATE NEW CUSTOMER ACCOUNT</h2>\n                    {error && <div className=\"alert-error\">\n                    {error}\n                    </div>}\n                    <h3>Prefix:</h3>\n                    <select name=\"prefix\" value={formValues.prefix} onChange = {handleChange} >\n                        <option value=\" \"> </option>\n                        <option value= \"Mr\">Mr.</option>\n                        <option value= \"Mrs\">Mrs.</option>\n                        <option value= \"Ms\">Ms.</option>\n                    </select>\n                    <h3>First Name:</h3>\n                    <input type=\"text\" name=\"firstName\" value={formValues.firstName} onChange = {handleChange}/>\n                    <h3>Last Name:</h3>\n                    <input type=\"text\" name=\"lastName\" value={formValues.lastName} onChange = {handleChange}/>\n                    <h3>Email:</h3>\n                    <input type=\"email\" name=\"email\" value={formValues.email} onChange = {handleChange}/>\n                    <h3>Username:</h3>\n                    <input type=\"text\" name=\"userName\" value={formValues.userName} onChange = {handleChange}/>\n                    <h3>Password:</h3>\n                    <input type=\"password\" name=\"password\" value={formValues.password} onChange = {handleChange}/>\n                    <br/>\n                    <input type=\"submit\" value=\"CREATE NEW ACCOUNT\" onClick={createUser} className=\"register-button\"/>\n                </form>\n            </div>       \n        </div>\n    ):<Redirect to='/'></Redirect>;\n}"]},"metadata":{},"sourceType":"module"}
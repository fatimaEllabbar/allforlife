{"ast":null,"code":"var _jsxFileName = \"/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/ProtectedRoute.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = props => {\n  const Component = props.component;\n  const isAuth = localStorage.getItem('token');\n  return isAuth ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 21\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 37\n  }, this);\n};\n/*class ProtectedRoute extends React.Component {\n\n    render() {\n        const Component = this.props.component;\n        const isAuthenticated = localStorage.getItem('token');\n       \n        return isAuthenticated ? (\n            <Component />\n        ) : (\n            <Redirect to={{ pathname: '/' }} />\n        );\n    }\n}\n*/\n\n\n_c = ProtectedRoute;\nexport default {\n  ProtectedRoute\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/megamind/lighthouse/allforlife/allforlife-1/client/src/components/ProtectedRoute.js"],"names":["React","Redirect","ProtectedRoute","props","Component","component","isAuth","localStorage","getItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,QAAMC,SAAS,GAAGD,KAAK,CAACE,SAAxB;AACA,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAf;AAEA,SAAOF,MAAM,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAmB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAAhC;AAEH,CAPD;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtBMJ,c;AAuBN,eAAe;AAAEA,EAAAA;AAAF,CAAf","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\n\nconst ProtectedRoute = (props) => {\n\n    const Component = props.component;\n    const isAuth = localStorage.getItem('token');\n\n    return isAuth ? <Component /> : <Redirect to='/' />;\n\n}\n\n/*class ProtectedRoute extends React.Component {\n\n    render() {\n        const Component = this.props.component;\n        const isAuthenticated = localStorage.getItem('token');\n       \n        return isAuthenticated ? (\n            <Component />\n        ) : (\n            <Redirect to={{ pathname: '/' }} />\n        );\n    }\n}\n*/\nexport default { ProtectedRoute };"]},"metadata":{},"sourceType":"module"}
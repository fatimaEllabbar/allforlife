{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/fatima/allforlife/client/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Register.css\";\nexport default function Register(props) {\n  _s();\n\n  const [formValues, setFormValues] = useState({\n    prefix: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const createUser = () => {\n    if (formValues.email === \"\" || formValues.password === \"\" || formValues.firstName === \"\" || formValues.lastName === \"\") {\n      setError(\"First name , last name , email and password cannot be blank !\");\n    } else {\n      const user = {\n        prefix: formValues.prefix,\n        firstName: formValues.firstName,\n        lastName: formValues.lastName,\n        email: formValues.email,\n        password: formValues.password\n      };\n      axios.post(`http://localhost:8007/api/register`, user).then(res => {\n        if (res.data.length <= 0) {\n          setError(\"Could not create user this email already exists!\");\n        } else {\n          console.log(res.data);\n          setError(\"\");\n          props.setUser(res.data);\n          setLoggedIn(true);\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"register-form\",\n        onSubmit: event => event.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"CREATE NEW CUSTOMER ACCOUNT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Prefix:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"prefix\",\n          value: formValues.prefix,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \" \",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mr\",\n            children: \"Mr.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Mrs\",\n            children: \"Mrs.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ms\",\n            children: \"Ms.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: formValues.firstName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: formValues.lastName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formValues.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formValues.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"CREATE NEW ACCOUNT\",\n          onClick: createUser,\n          className: \"register-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"uI3soGcKL0wIE6s22qSCdnwrp44=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/fatima/allforlife/client/src/components/Register.js"],"names":["React","useState","axios","Register","props","formValues","setFormValues","prefix","firstName","lastName","email","password","error","setError","loggedIn","setLoggedIn","handleChange","event","name","value","target","createUser","user","post","then","res","data","length","console","log","setUser","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Register.css\"\n\nexport default function Register(props) {\n\n    const [formValues, setFormValues] = useState({\n        prefix:\"\",\n        firstName:\"\",\n        lastName:\"\",\n        email: \"\",\n        password: \"\"\n    });\n    const [error, setError] = useState(\"\");\n\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    const handleChange = (event) => {\n        const { name, value } = event.target\n        setFormValues({ ...formValues, [name]: value })\n    }\n\n    const createUser = () => {\n        if(formValues.email === \"\" || formValues.password===\"\" || formValues.firstName===\"\"\n        || formValues.lastName===\"\") {\n            setError(\"First name , last name , email and password cannot be blank !\")\n        } else {\n            const user = {\n                prefix:formValues.prefix,\n                firstName:formValues.firstName,\n                lastName:formValues.lastName,\n                email: formValues.email,\n                password: formValues.password\n            }\n            axios.post(`http://localhost:8007/api/register`,user).then(res =>{\n                if(res.data.length <= 0){\n                    setError(\"Could not create user this email already exists!\")\n                    } else {\n                        console.log(res.data);\n                        setError(\"\");\n                        props.setUser(res.data)\n                        setLoggedIn(true);\n                    } \n             });\n\n        } \n    }\n\n    return (\n        <div className=\"register-container\">\n            <div className=\"register\">\n                <form className=\"register-form\" onSubmit={event => event.preventDefault()} >\n                    <h2>CREATE NEW CUSTOMER ACCOUNT</h2>\n                    {error && <div className=\"alert-error\">\n                    {error}\n                    </div>}\n                    <h3>Prefix:</h3>\n                    <select name=\"prefix\" value={formValues.prefix} onChange = {handleChange} >\n                        <option value=\" \"> </option>\n                        <option value= \"Mr\">Mr.</option>\n                        <option value= \"Mrs\">Mrs.</option>\n                        <option value= \"Ms\">Ms.</option>\n                    </select>\n                    <h3>First Name:</h3>\n                    <input type=\"text\" name=\"firstName\" value={formValues.firstName} onChange = {handleChange}/>\n                    <h3>Last Name:</h3>\n                    <input type=\"text\" name=\"lastName\" value={formValues.lastName} onChange = {handleChange}/>\n                    <h3>Email:</h3>\n                    <input type=\"email\" name=\"email\" value={formValues.email} onChange = {handleChange}/>\n                    <h3>Password:</h3>\n                    <input type=\"password\" name=\"password\" value={formValues.password} onChange = {handleChange}/>\n                    <br/>\n                    <input type=\"submit\" value=\"CREATE NEW ACCOUNT\" onClick={createUser} className=\"register-button\"/>\n                </form>\n            </div>       \n        </div>\n    )\n    \n}\n\n"]},"metadata":{},"sourceType":"module"}